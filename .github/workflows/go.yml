# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Build
      run: cd serverlet ; go build -v

    - name: Test
      run: go test -v ./...

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: serverlet
        path: serverlet/serverlet


      
  # release:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4
    
  #   - name: Set up Go
  #     uses: actions/setup-go@v4
  #     with:
  #       go-version: '1.22'

  #   - name: Build
  #     run: cd serverlet ; go build -v

  #   - name: Test
  #     run: go test -v ./...

  #   - name: Create Release
  #     id: create_release
  #     uses: actions/create-release@v1
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     with:
  #       tag_name: nightly
  #       release_name: Release nightly
  #       body: |
  #         Changes in this Release
  #         - Added new feature
  #         - Fixed a bug
  #       draft: false
  #       prerelease: false

  #   - name: Upload Release Asset
  #     id: upload-release-asset
  #     uses: actions/upload-release-asset@v1
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     with:
  #       upload_url: ${{ steps.create_release.outputs.upload_url }}
  #       asset_path: ./serverlet/serverlet
  #       asset_name: serverlet
  #       asset_content_type: application/octet-stream
